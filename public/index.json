[{"content":"","permalink":"https://chagpt-database.vercel.app/posts/first/","summary":"","title":"First"},{"content":"I\u0026rsquo;m too lazy to write separate instruction, so I put them all together, as your\u0026rsquo;re free to copy codes!\n1.prep sudo apt update sudo apt install snapd sudo snap Update Packages: Start by updating your package list to ensure you have the latest version information. sudo apt update Install Snapd: Snapd is the package manager for snaps. Install it using the following command: sudo apt install snapd Enable Snapd: If your system doesn\u0026rsquo;t have snapd enabled by default, you might need to enable it manually: sudo systemctl enable snapd sudo systemctl start snapd Install Hugo: Once Snapd is installed and enabled, you can use Snap to install Hugo. sudo snap install hugo Verify Installation: To verify that Hugo was installed successfully, you can use the following command to check its version: hugo version 2. install git sudo apt install git-all hugo new site myblog cd myblog #git init git clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 cd themes/PaperMod git pull echo \u0026#34;theme = \u0026#39;PaperMod\u0026#39;\u0026#34; \u0026gt;\u0026gt; config.yaml hugo server --port=8000 --bind=0.0.0.0 change hugo.tomal / .yaml Posts | PaperMod (adityatelange.github.io)\nbaseURL: \u0026#39;https://chagpt-database.vercel.app/\u0026#39; title: \u0026#39;UniBlog\u0026#39; theme: \u0026#34;PaperMod\u0026#34; paginate: 5 enableInlineShortcodes: true enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false enableEmoji: true pygmentsUseClasses: true googleAnalytics: \u0026#34;G-XGCNQ2550D\u0026#34; ..... After that, start to using apache2 or Nginx\nsudo apt update \u0026amp;\u0026amp; sudo apt dist-upgrade sudo apt install apache2 apache2-doc apache2-utils systemctl status apache2 ls /etc/apache2/sites-available/ sudo a2dissite 000-default.conf sudo systemctl reload apache2 sudo ufw app list sudo ufw allow \u0026#39;Apache Full\u0026#39; sudo ufw enable cd /var cd www cd html sudo mkdir myblog cd myblog sudo mkdir public_html sudo mkdir log sudo mkdir backups cd /etc/apache2/sites-available/ sudo nano myblog.conf ### \u0026lt;VirtualHost *:80\u0026gt; ServerAdmin hougarry@gmail.com ServerName unilux.icu ServerAlias www.unilux.icu DirectoryIndex index.html index.php DocumentRoot /var/www/html/myblog/public_html LogLevel warn ErrorLog /var/www/html/myblog/log/error.log CustomLog /var/www/html/myblog/log/access.log combined \u0026lt;/VirtualHost\u0026gt; ### sudo a2ensite myblog.conf systemctl reload apache2 #copy all the files under /home/ubuntu/myblog/public/ to /var/www/html/myblog/public_html sudo cp -r /home/ubuntu/myblog/public/* /var/www/html/myblog/public_html/ sudo chown -R www-data:www-data /var/www/html/myblog/public_html/ ## site not insecure sudo apt install certbot python3-certbot-apache sudo certbot --apache -d www.unilux.icu ## cd /home/ubuntu/myblog hugo #run hugo to reupdate your config.yml sudo cp -r /home/ubuntu/myblog/public/* /var/www/html/myblog/public_html/ setting nginx or Apache2 sudo rm /etc/nginx/sites-enabled/default sudo vim /etc/nginx/sites-enabled/hugo.conf sudo rm /etc/nginx/sites-enabled/hugo.conf find / -type f -name \u0026#34;uploads\u0026#34; 2\u0026gt;/dev/null find / -type d -name \u0026#34;static\u0026#34; 2\u0026gt;/dev/null find / -type f -name \u0026#34;gunicorn_start.sh\u0026#34; 2\u0026gt;/dev/null server { listen 80; server_name www.unilux.icu; # Adjusted to your IP root /home/ubuntu/; # Assuming \u0026#39;myblog\u0026#39; is your Hugo project; # Corrected root directory access_log /var/log/nginx/myblog_access.log; error_log /var/log/nginx/myblog_error.log; location /static/ { alias /home/ubuntu/myblog/static/; # Assuming \u0026#39;myblog\u0026#39; is your Hugo project expires max; access_log off; log_not_found off; } location ~ \\.py$ { return 403; } location / { proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Host $http_host; proxy_set_header X-NginX-Proxy true; proxy_redirect off; if (!-f $request_filename) { proxy_pass http://101.43.191.16:1313; # Updated to your VPS IP break; } } } ~ ~ #use nginx: sudo nginx -t # to test the configuration sudo nginx -s reload # to reload Nginx with the new configuration sudo /etc/init.d/nginx restart how to run persistently? Method1: use sytemctl\nCertainly, let\u0026rsquo;s set up your blog so that it continues to run even if you close your Xshell. We\u0026rsquo;ll use a system manager like systemd to ensure that the Hugo server is always running.\nCreate a Systemd Service File You will need to create a systemd service file to control the Hugo process.\nsudo nano /etc/systemd/system/myblog.service ##find hugo\nThen insert:\n[Unit] Description=MyBlog Hugo Service After=network.target [Service] Type=simple User=ubuntu ExecStart=/snap/bin/hugo server -D --source=/home/ubuntu/myblog --bind=0.0.0.0 --port=1313 Restart=always [Install] WantedBy=multi-user.target Save and exit.\nEnable and Start the Service Enable the service to start on boot and then start it immediately:\nsudo chmod +x /snap/bin/hugo sudo systemctl enable myblog sudo systemctl start myblog Check the Service Status You can use the following command to make sure the service is running:\nsudo systemctl status myblog Restart Nginx Don\u0026rsquo;t forget to restart nginx to apply any changes you made:\nsudo systemctl restart nginx Test Your Configuration Try accessing your blog from a web browser using your domain.\nsudo systemctl status myblog sudo journalctl -u myblog #method2: use supervisor sudo rm /etc/supervisor/conf.d/myblog.conf sudo vim /etc/supervisor/conf.d/myblog.conf #run supervisor sudo supervisorctl reread sudo supervisorctl update sudo supervisorctl reload sudo /etc/init.d/memcached restart \u0026amp;\u0026amp; sudo /etc/init.d/nginx restart #check and update ps aux | grep gunicorn python manage.py runserver 0.0.0.0:8000 sudo supervisorctl stop gunicorn allow sfp\nsudo ufw allow OpenSSH # then we can use winscp/transmit to login our website sftp://unilux.icu insert google analytic: Locate the head.html file in your theme. In your case, the file is located at\n/home/ubuntu/myblog/themes/PaperMod/layouts/partials/head.html.\n#insert this \u0026lt;!-- Google tag (gtag.js) --\u0026gt; \u0026lt;script async src=\u0026#34;https://www.googletagmanager.com/gtag/js?id=G-XGCNQ2550D\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag(\u0026#39;js\u0026#39;, new Date()); gtag(\u0026#39;config\u0026#39;, \u0026#39;G-XGCNQ2550D\u0026#39;); \u0026lt;/script\u0026gt; # up here {{- /* Misc */}} {{- if hugo.IsProduction | or (eq site.Params.env \u0026#34;production\u0026#34;) }} {{- template \u0026#34;_internal/google_analytics.html\u0026#34; . }} {{- template \u0026#34;partials/templates/opengraph.html\u0026#34; . }} {{- template \u0026#34;partials/templates/twitter_cards.html\u0026#34; . }} {{- template \u0026#34;partials/templates/schema_json.html\u0026#34; . }} {{- end -}} No need to write articles directly into /var/www/html/myblog/public_html. Step-by-Step Explanation\nHugo Content: Write your new articles in Hugo\u0026rsquo;s content directory (/home/ubuntu/myblog/content).\nHugo Build: Run Hugo\u0026rsquo;s build command to generate static HTML. This usually puts the HTML in a public directory inside your Hugo project.\nhugo -D Sync or Copy: You then sync or copy these generated HTML files to /var/www/html/myblog/public_html.\nsudo cp -r /home/ubuntu/myblog/public/* /var/www/html/myblog/public_html/ Apache: Apache will serve files from /var/www/html/myblog/public_html, as defined in your VirtualHost config.\nFollow these steps and your articles should be live after that.\n","permalink":"https://chagpt-database.vercel.app/posts/2/","summary":"I\u0026rsquo;m too lazy to write separate instruction, so I put them all together, as your\u0026rsquo;re free to copy codes!\n1.prep sudo apt update sudo apt install snapd sudo snap Update Packages: Start by updating your package list to ensure you have the latest version information. sudo apt update Install Snapd: Snapd is the package manager for snaps. Install it using the following command: sudo apt install snapd Enable Snapd: If your system doesn\u0026rsquo;t have snapd enabled by default, you might need to enable it manually: sudo systemctl enable snapd sudo systemctl start snapd Install Hugo: Once Snapd is installed and enabled, you can use Snap to install Hugo.","title":"[Deploy Projects] Hugo Blog-fastest static blog on VPS!"},{"content":"üé§ Introduction Hey Techies! ü§ñ Want to set up your own chat platform that rivals Slack and Discord? Well, you\u0026rsquo;ve landed at the right place. In this article, we\u0026rsquo;ll go step-by-step to set up Rocket.Chat on your VPS. And guess what? It\u0026rsquo;s easier than assembling IKEA furniture. ü™ë So, buckle up!\nüêß Installing Rocket.Chat on Linux Server Alrighty, let\u0026rsquo;s get down to business. Fire up that terminal! üêö\nFirst, install Rocket.Chat using Snap:\nsudo snap install rocketchat-server # To check status sudo service snap.rocketchat-server.rocketchat-server status Then, let\u0026rsquo;s install Nginx for our web server:\n# Install Nginx sudo apt install -y nginx sudo systemctl start nginx sudo systemctl enable nginx # Delete the default config sudo rm /etc/nginx/sites-enabled/default üõ†Ô∏è Using Nginx as Web Server Now, we need to configure Nginx to proxy our Rocket.Chat application:\n# Install Vim editor sudo apt-get install -y vim # Create a new config file sudo vim /etc/nginx/sites-available/rocketchat.conf In this file, input the following Nginx settings:\nserver { listen 80; server_name chat.unilux.icu; location / { proxy_pass http://localhost:6666/; } } Now, link the config and reload Nginx:\nsudo ln -s /etc/nginx/sites-available/rocketchat.conf /etc/nginx/sites-enabled sudo nginx -t sudo nginx -s reload üîí SSL Certificate with Certbot Security first, folks! Let\u0026rsquo;s install Certbot to get that free SSL certificate:\nsudo apt-get install -y software-properties-common sudo apt-get-repository ppa:certbot/certbot sudo apt-get update sudo apt-get install -y python3-certbot-nginx sudo certbot --nginx üêò Using Apache2 as an Alternative Not a fan of Nginx? No worries. Apache2 is here for the rescue. üöÅ\n# Stop and disable Nginx sudo systemctl stop nginx sudo systemctl disable nginx # Enable Apache mod_proxy and mod_proxy_http sudo a2enmod proxy systemctl restart apache2 sudo a2enmod proxy_http systemctl restart apache2 Create a new config file:\ncd /etc/apache2/sites-available/ sudo vim /etc/apache2/sites-available/rocketchat.conf In this file, include the Apache settings:\n\u0026lt;VirtualHost *:80\u0026gt; ServerName chat.unilux.icu ProxyPass / http://localhost:3000/ ProxyPassReverse / http://localhost:3000/ \u0026lt;/VirtualHost\u0026gt; Reload Apache:\nsudo a2ensite rocketchat.conf sudo systemctl reload apache2 sudo apachectl configtest sudo journalctl -xe | grep apache2 #This will verify if the problem is fixed. ## site not insecure sudo apt install certbot python3-certbot-apache sudo certbot --apache -d chat.unilux.icu # automatically renew your ssl certification sudo certbot renew --dry-run üéâ Conclusion Voil√†! You now have your Rocket.Chat server up and running. üéÜ Whether you chose the Nginx route üèéÔ∏è or the Apache trail üêé, you‚Äôre now the admin of your own chat universe!\nFeel free to ask any questions in the comments. Until next time, happy chatting! üí¨\n","permalink":"https://chagpt-database.vercel.app/posts/1/","summary":"üé§ Introduction Hey Techies! ü§ñ Want to set up your own chat platform that rivals Slack and Discord? Well, you\u0026rsquo;ve landed at the right place. In this article, we\u0026rsquo;ll go step-by-step to set up Rocket.Chat on your VPS. And guess what? It\u0026rsquo;s easier than assembling IKEA furniture. ü™ë So, buckle up!\nüêß Installing Rocket.Chat on Linux Server Alrighty, let\u0026rsquo;s get down to business. Fire up that terminal! üêö\nFirst, install Rocket.","title":"[Deploy Projects] Rocket.Chat -private real-chat on VPS!"}]